% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simutils.R
\name{sim_across}
\alias{sim_across}
\title{Simulate across settings}
\usage{
sim_across(
  sim_fn,
  sim_id = time2id(),
  sim_dir = getwd(),
  n_reps = 1,
  seed = 1,
  n_cores = 1,
  debug = 1,
  ...
)
}
\arguments{
\item{sim_fn}{A simulation function.}

\item{sim_id}{A character string representing the simulation ID.}

\item{sim_dir}{A character string representing the directory path where simulations are stored.}

\item{n_reps}{A positive integer representing the number of repetitions of \code{sim_fn} for each combination of settings.}

\item{seed}{A list containing the simulation settings to be saved or validated.}

\item{n_cores}{A positive integer representing the number of cores to use for execution. Set to -1 to automatically detect the number of cores.}

\item{debug}{An integer for debugging level. Defaults to 1.}

\item{...}{Additional settings passed to \code{sim_fn}. \code{sim_fn} will be executed over each unique combination of settings. Optionally, a \code{sim_grid} data.frame object can be provided with the desired setting combinations.}
}
\value{
Returns list of simulation results.
}
\description{
Simulates a simulation function across combinations of settings.
}
\examples{
## Example simulation function
sim_fn <- function(n, mean, sd){
  Sys.sleep(1)
  x <- rnorm(n = n, mean = mean, sd = sd)
  data.frame(mean = mean(x),
             sd = sd(x))
}

## Example execution using ... and single core
res1 <- sim_across(sim_fn = sim_fn, sim_id = "example1", sim_dir = "inst/example",
                   n_reps = 2, seed = 1, n_cores = 1,
                   n = seq_len(2) * 10, mean = seq_len(2), sd = seq_len(2),
                   debug = 1)

## Example execution using sim_grid and multicore
sim_grid <- expand.grid(n = seq_len(2) * 10,
                        mean = seq_len(2),
                        sd = seq_len(2))

res2 <- sim_across(sim_fn = sim_fn, sim_id = "example2", sim_dir = "inst/example",
                   n_reps = 2, seed = 1, n_cores = -1,
                   sim_grid = sim_grid,
                   debug = 1)

all.equal(res1, res2, check.attributes = FALSE)
}
